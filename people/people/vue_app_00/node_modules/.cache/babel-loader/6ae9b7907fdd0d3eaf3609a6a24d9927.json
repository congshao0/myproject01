{"remainingRequest":"C:\\Users\\web\\Desktop\\people\\vue_app_00\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\web\\Desktop\\people\\vue_app_00\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\web\\Desktop\\people\\vue_app_00\\src\\components\\Login\\Register.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\Users\\web\\Desktop\\people\\vue_app_00\\src\\components\\Login\\Register.vue","mtime":1569374923196},{"path":"C:\\Users\\web\\Desktop\\people\\vue_app_00\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1534853416000},{"path":"C:\\Users\\web\\Desktop\\people\\vue_app_00\\node_modules\\babel-loader\\lib\\index.js","mtime":1529635966000},{"path":"C:\\Users\\web\\Desktop\\people\\vue_app_00\\node_modules\\vue-loader\\lib\\index.js","mtime":1527860006000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  data: function data() {\n    return {\n      uname: \"\",\n      upwd: \"\",\n      phone: \"\"\n    };\n  },\n  methods: {\n    reg: function reg() {\n      var _this = this;\n\n      //功能:验证用户输入表单 \n      //1:创建正则表达式一 用户名和密码\n      //  3~12位 字母数字 严格验证\n      var regu = /^[a-z0-9]{3,12}$/i; //2:创建正则表达式二 年龄\n\n      var regh = /^1[3-8]\\d{9}$/i; //  2   位 数字\n      //3:获取用户名 16:27\n\n      var u = this.uname; //4:获取密码\n\n      var p = this.upwd; //5:获取年龄\n\n      var h = this.phone; //console.log(u+\":\"+p+\":\"+a);\n      //6:验证用户名，如果出错交互\n\n      if (!regu.test(u)) {\n        //6.1:提示用户输入出错提示框\n        this.$messagebox(\"消息\", \"用户名格式不正确\"); //6.2:停止当前函数继续执行\n\n        return;\n      } //7:验证密码，  如果出错交互 \n\n\n      if (!regu.test(p)) {\n        //7.1:提示用户输入密码出错\n        this.$messagebox(\"消息\", \"密码格式不正确\");\n        return;\n      } //8:验证电话号码    如果出错交互\n\n\n      if (!regu.test(h)) {\n        this.$messagebox(\"消息\", \"电话号码格式不正确\");\n        return;\n      } //9:验证成功 ajax请求完成注册任务 \n      else {\n          var url = \"register\";\n          var obj = {\n            uname: u,\n            upwd: p,\n            phone: h\n          };\n          this.axios.get(url, {\n            params: obj\n          }).then(function (res) {\n            //6: 回调函数:接收服务器返回数据\n            var code = res.data.code;\n\n            if (code == -1) {\n              //7: 失败 提示\n              _this.$messagebox(\"消息\", \"注册失败\");\n            } else {\n              //8: 成功 跳转\n              //this.$router.push(\"/product\")\n              _this.$messagebox(\"消息\", \"注册成功\");\n            }\n          });\n        }\n    }\n  }\n};",{"version":3,"sources":["Register.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;AAsBA,eAAA;AACA,MADA,kBACA;AACA,WAAA;AAAA,aAAA,EAAA;AAAA,YAAA,EAAA;AAAA,aAAA;AAAA,KAAA;AACA,GAHA;AAIA,WAAA;AACA,OADA,iBACA;AAAA;;AACA;AACA;AACA;AACA,UAAA,OAAA,mBAAA,CAJA,CAKA;;AACA,UAAA,OAAA,gBAAA,CANA,CAOA;AACA;;AACA,UAAA,IAAA,KAAA,KAAA,CATA,CAUA;;AACA,UAAA,IAAA,KAAA,IAAA,CAXA,CAYA;;AACA,UAAA,IAAA,KAAA,KAAA,CAbA,CAcA;AACA;;AACA,UAAA,CAAA,KAAA,IAAA,CAAA,CAAA,CAAA,EAAA;AACA;AACA,aAAA,WAAA,CAAA,IAAA,EAAA,UAAA,EAFA,CAGA;;AACA;AACA,OArBA,CAsBA;;;AACA,UAAA,CAAA,KAAA,IAAA,CAAA,CAAA,CAAA,EAAA;AACA;AACA,aAAA,WAAA,CAAA,IAAA,EAAA,SAAA;AACA;AACA,OA3BA,CA4BA;;;AACA,UAAA,CAAA,KAAA,IAAA,CAAA,CAAA,CAAA,EAAA;AACA,aAAA,WAAA,CAAA,IAAA,EAAA,WAAA;AACA;AACA,OAHA,CAIA;AAJA,WAKA;AACA,cAAA,MAAA,UAAA;AACA,cAAA,MAAA;AAAA,mBAAA,CAAA;AAAA,kBAAA,CAAA;AAAA,mBAAA;AAAA,WAAA;AACA,eAAA,KAAA,CAAA,GAAA,CAAA,GAAA,EAAA;AAAA,oBAAA;AAAA,WAAA,EAAA,IAAA,CAAA,eAAA;AACA;AACA,gBAAA,OAAA,IAAA,IAAA,CAAA,IAAA;;AACA,gBAAA,QAAA,CAAA,CAAA,EAAA;AACA;AACA,oBAAA,WAAA,CAAA,IAAA,EAAA,MAAA;AACA,aAHA,MAGA;AACA;AACA;AACA,oBAAA,WAAA,CAAA,IAAA,EAAA,MAAA;AACA;AACA,WAXA;AAYA;AACA;AAnDA;AAJA,CAAA","sourcesContent":["<template>\r\n  <div>\r\n    <h2>注册</h2>\r\n    <!--表单输入框 用户名 密码 年龄 提交按钮 -->\r\n    <mt-field label=\"用户名\"\r\n    placeholder=\"请输入用户名\"\r\n    :attr=\"{maxlength:10}\"\r\n    v-model=\"uname\">\r\n    </mt-field>\r\n    <mt-field label=\"密码\"\r\n    placeholder=\"请输入密码\"\r\n    type=\"password\" v-model=\"upwd\">\r\n    </mt-field>\r\n    <mt-field label=\"电话号码\"\r\n    placeholder=\"请输入电话号码\"\r\n    type=\"number\" v-model=\"phone\"></mt-field>\r\n    <mt-button size=\"large\" @click=\"reg\">\r\n      用户注册\r\n    </mt-button>\r\n  </div>\r\n</template>\r\n<script>\r\nexport default {\r\n  data(){\r\n    return {uname:\"\",upwd:\"\",phone:\"\"}\r\n  },\r\n  methods:{\r\n    reg(){\r\n      //功能:验证用户输入表单 \r\n      //1:创建正则表达式一 用户名和密码\r\n      //  3~12位 字母数字 严格验证\r\n      var regu = /^[a-z0-9]{3,12}$/i;\r\n      //2:创建正则表达式二 年龄\r\n      var regh = /^1[3-8]\\d{9}$/i;\r\n      //  2   位 数字\r\n      //3:获取用户名 16:27\r\n      var u = this.uname;\r\n      //4:获取密码\r\n      var p = this.upwd;\r\n      //5:获取年龄\r\n      var h = this.phone;\r\n      //console.log(u+\":\"+p+\":\"+a);\r\n      //6:验证用户名，如果出错交互\r\n      if(!regu.test(u)){\r\n        //6.1:提示用户输入出错提示框\r\n        this.$messagebox(\"消息\",\"用户名格式不正确\");\r\n        //6.2:停止当前函数继续执行\r\n        return;\r\n      }\r\n      //7:验证密码，  如果出错交互 \r\n      if(!regu.test(p)){\r\n        //7.1:提示用户输入密码出错\r\n        this.$messagebox(\"消息\",\"密码格式不正确\");\r\n        return;\r\n      }\r\n      //8:验证电话号码    如果出错交互\r\n      if(!regu.test(h)){\r\n        this.$messagebox(\"消息\",\"电话号码格式不正确\");\r\n        return;\r\n      }\r\n      //9:验证成功 ajax请求完成注册任务 \r\n      else{\r\n        var url = \"register\";\r\n        var obj = {uname:u,upwd:p,phone:h};\r\n        this.axios.get(url,{params:obj}).then(res=>{\r\n        //6: 回调函数:接收服务器返回数据\r\n          var code = res.data.code;\r\n          if(code==-1){\r\n          //7: 失败 提示\r\n          this.$messagebox(\"消息\",\"注册失败\");\r\n          }else{\r\n          //8: 成功 跳转\r\n          //this.$router.push(\"/product\")\r\n          this.$messagebox(\"消息\",\"注册成功\");\r\n          }\r\n        })\r\n      }  \r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n"],"sourceRoot":"src\\components\\Login"}]}